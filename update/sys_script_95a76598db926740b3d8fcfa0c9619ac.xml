<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_sthc_tms_link_tms_work_order</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SOAP call to TMS</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

try { 
 var s = new sn_ws.SOAPMessageV2('x_sthc_tms_link.TMS2', 'WorkOrderWS.Save');

//override authentication profile 
//authentication type ='basic'
//r.setAuthentication(authentication type,profile name);

//set a MID server name if one wants to run the message on MID
s.setMIDServer('NSSC MID SERVER');

//if the message is configured to communicate through ECC queue, either
//by setting a MID server or calling executeAsync, one needs to set skip_sensor
//to true. Otherwise, one may get an intermittent error that the response body is null
//r.setEccParameter('skip_sensor', true);

 s.setStringParameterNoEscape('header.HostName', '');
 s.setStringParameterNoEscape('myWorkOrder.RequesterPhone', current.requester_phone);
 s.setStringParameterNoEscape('myWorkOrder.AccountDescription', '');
 s.setStringParameterNoEscape('header.Password', 'password1');
 s.setStringParameterNoEscape('myWorkOrder.TypeCode', current.tms_type);
 s.setStringParameterNoEscape('myWorkOrder.SegmentID', current.segment);
 s.setStringParameterNoEscape('myWorkOrder.RequesterEmail', current.requester.email);
 s.setStringParameterNoEscape('myWorkOrder.SubStatusDescription', '');
 s.setStringParameterNoEscape('header.Server', 'SVCMMSDBTEST001');
 s.setStringParameterNoEscape('myWorkOrder.KeyID', '1');
 s.setStringParameterNoEscape('header.Database', 'TMS_Test');
 s.setStringParameterNoEscape('myWorkOrder.SkillCode', current.tms_skills);
 s.setStringParameterNoEscape('myWorkOrder.StatusDescription', '');
 s.setStringParameterNoEscape('myWorkOrder.TypeDescription', '');
 s.setStringParameterNoEscape('myWorkOrder.SkillDescription', '');
 s.setStringParameterNoEscape('myWorkOrder.StatusCode', current.tms_status);
 s.setStringParameterNoEscape('myWorkOrder.RequesterName', current.requester.name);
 s.setStringParameterNoEscape('myWorkOrder.RequesterComments', current.requester_comments);
 s.setStringParameterNoEscape('myWorkOrder.Description', current.description);
 s.setStringParameterNoEscape('myWorkOrder.PriorityCode', current.tms_priority);
 s.setStringParameterNoEscape('header.PassKey', '');
 s.setStringParameterNoEscape('myWorkOrder.AccountCode', current.tms_account);
 s.setStringParameterNoEscape('myWorkOrder.ValidateForDataImport', '0');
 s.setStringParameterNoEscape('myWorkOrder.SubStatusCode', current.tms_sub_status);
 s.setStringParameterNoEscape('header.UserName', 'servicenow');
 s.setStringParameterNoEscape('header.SiteCode', getSiteCode(current.tms_location.campus));
 s.setStringParameterNoEscape('myWorkOrder.BuildingCode', current.building.code);
 s.setStringParameterNoEscape('myWorkOrder.LocationCode', current.tms_location.code);
 if(current.problem)s.setStringParameterNoEscape('myWorkOrder.ProblemCode', current.problem);

 var response = s.execute();
 var responseBody = response.getBody(); 
 var status = response.getStatusCode();
	gs.info("TMS Response " + responseBody);
	
	var xmlDoc = new XMLDocument2();
xmlDoc.parseXML(responseBody);
var workOrder = xmlDoc.getNodeText('//WorkOrderNumber');
//gs.info('TMS Number ' + workOrder);
gs.addInfoMessage("Work order " + workOrder + " has been created in TMS");
current.tms_word_order_number = workOrder;	
current.tms_response = responseBody;
}
catch(ex) { 
 var message = ex.message;
}

})(current, previous);

function getSiteCode(loc){
	switch (loc){
		case 'DV':
			return '1020';
		case 'JCL':
			return '1010';
		case 'MG':
			return '1075';
		case 'SHEA':
			return '1030';
		case 'STP':
			return 'TPK';
		case 'OSB':
			return 'Osborn';
		default:
			return;
	}
	
	
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>LGOMEZ</sys_created_by>
        <sys_created_on>2018-12-06 17:14:25</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>95a76598db926740b3d8fcfa0c9619ac</sys_id>
        <sys_mod_count>49</sys_mod_count>
        <sys_name>SOAP call to TMS</sys_name>
        <sys_overrides/>
        <sys_package display_value="TMS Link" source="x_sthc_tms_link">4197218cdb56e340b3d8fcfa0c961904</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TMS Link">4197218cdb56e340b3d8fcfa0c961904</sys_scope>
        <sys_update_name>sys_script_95a76598db926740b3d8fcfa0c9619ac</sys_update_name>
        <sys_updated_by>LGOMEZ</sys_updated_by>
        <sys_updated_on>2018-12-11 20:03:01</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
